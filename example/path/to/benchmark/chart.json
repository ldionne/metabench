{
  "title"   : { "text": "Creating a heterogeneous container with n elements" },
  "subtitle": { "text": "(smaller is better)" },
  "xAxis": {
    "title": { "text": "Number of elements" }
  },
  "yAxis": {
    "title": { "text": "Time (s)" },
    "floor": 0
  },
  "tooltip": { "valueSuffix": "s" },
  "series": [
    {
      "name": "std::tuple",
      "data": <%=
        # Here, you can write arbitrary Ruby code. The result of this Ruby code
        # will be replaced in the resulting JSON file. In this case, the result
        # of this Ruby code will be an array containing the compile-times for
        # compiling the `std_tuple.cpp` file with different values of `n`.
        Metabench::compile_time("std_tuple.cpp", (0...50).step(5),

            # This file is also passed through CMake `configure_file`, so
            # variables defined in the CMake file that calls `add_benchmark`
            # can also be used here.
            cxxflags: '-I @CMAKE_SOURCE_DIR@/include',
            env: {variable: "foo"}
        )
      %>
    }

    , {
      "name": "recursive tuple",
      "data": <%=
        Metabench.compile_time("recursive_tuple.cpp", (0...50).step(5))
      %>
    }
  ]
}
