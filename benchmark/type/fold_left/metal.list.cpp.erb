// Copyright Bruno Dutra 2016
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

#include <metal.hpp>

template<typename, typename X>
using f = X;

struct state;

template<int> struct x;

<% env[:k].times do |k| %>

using <%= "xs#{k}" %> = metal::list<
    metal::lambda<f>, state<%= ((k*n+1)..(k*n+n)).map { |i| ", x<#{i}>" }.join('') %>
>;

#if defined(METABENCH)
using <%= "result#{k}" %> = metal::apply<metal::lambda<metal::fold_left>, <%= "xs#{k}" %>>;
#endif

<% end %>

int main() {}
