// Copyright Louis Dionne 2013-2016
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

<% if n > 20 %>
    #define BOOST_MPL_CFG_NO_PREPROCESSED_HEADERS
    #define BOOST_MPL_LIMIT_LIST_SIZE <%= ((n + 9) / 10) * 10 %>
<% end %>

#if defined(METABENCH)
#include <boost/mpl/list.hpp>
#include <boost/mpl/fold.hpp>
namespace mpl = boost::mpl;

struct f {
    template<typename, typename X>
    struct apply {
        using type = X;
    };
};

struct state;

template<int> struct x;

using list = mpl::list<
    <%= (1..n).map { |i| "x<#{i}>" }.join(', ') %>
>;

using result = mpl::fold<list, state, f>::type;
#endif

int main() { }
