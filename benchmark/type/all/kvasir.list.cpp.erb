// Copyright Odin Holmes 2017
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

#include <kvasir/mpl/mpl.hpp>
namespace mpl = kvasir::mpl;

template<int X>
struct differs_from {
  template <typename Y>
  using apply = mpl::bool_<X != Y::value>;
};

<% env[:k].times do |k| %>

<% ints = ((k*n+1)..(k*n+n)).to_a %>

using <%= "xs#{k}" %> = mpl::list<<%= ints.map { |i| "mpl::int_<#{i}>" }.join(', ') %>>;

#if defined(METABENCH)
using <%= "result#{k}" %> = mpl::all<<%= "xs#{k}" %>, differs_from<<%= ints.last || 0 %>>::apply>;
#endif

<% end %>

int main() {}
