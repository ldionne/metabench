// Copyright Louis Dionne 2016
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

<% if n > 20 %>
    #define BOOST_MPL_CFG_NO_PREPROCESSED_HEADERS
    #define BOOST_MPL_LIMIT_VECTOR_SIZE <%= ((n + 9) / 10) * 10 %>
<% end %>

#include <boost/mpl/vector.hpp>
#include <boost/mpl/sort.hpp>
#include <boost/mpl/bool.hpp>
#include <boost/mpl/int.hpp>
namespace mpl = boost::mpl;

<% env[:k].times do |k| %>

using <%= "xs#{k}" %> = mpl::vector<<%=
    xs = ((k*n+1)..(k*n+n)).map { |i| "mpl::int_<#{i}>" }
    rng = Random.new(k)
    xs.shuffle(random: rng).join(', ')
%>>;

#if defined(METABENCH)
using <%= "result#{k}" %> = mpl::sort<<%= "xs#{k}" %>>::type;
#endif

<% end %>

int main() { }
