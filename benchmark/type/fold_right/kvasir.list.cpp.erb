// Copyright Odin Holmes 2017
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

#include <kvasir/mpl/mpl.hpp>
namespace mpl = kvasir::mpl;

template<typename, typename X>
using f = X;

struct state;

template<int> struct x;

<% env[:k].times do |k| %>

using <%= "xs#{k}" %> = mpl::list<
    <%= ((k*n+1)..(k*n+n)).map { |i| "x<#{i}>" }.join(', ') %>
>;

#if defined(METABENCH)
using <%= "result#{k}" %> = mpl::fold_right<<%= "xs#{k}" %>, state, f>;
#endif

<% end %>

int main() {}
