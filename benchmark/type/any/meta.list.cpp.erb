// Copyright Bruno Dutra 2016
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

#include <meta/meta.hpp>

struct is_last {
    template<typename N>
    using invoke = meta::bool_<N::type::value == <%= n %>>;
};

using list = meta::list<
    <%= (1..n).map { |i| "meta::int_<#{i}>" }.join(', ') %>
>;

#if defined(METABENCH)
using result = meta::any_of<list, is_last>;
#endif

int main() { }
