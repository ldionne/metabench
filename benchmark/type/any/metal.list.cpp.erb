// Copyright Bruno Dutra 2016
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

#include <metal.hpp>

template <int X>
struct equals_to {
  template<typename Y>
  using apply = metal::number<X == Y::type::value>;
};

<% env[:k].times do |k| %>

<% ints = ((k*n+1)..(k*n+n)).to_a %>

using <%= "xs#{k}" %> = metal::list<<%= ints.map { |i| "metal::number<#{i}>" }.join(', ') %>>;

#if defined(METABENCH)
using <%= "result#{k}" %> = metal::any_of<<%= "xs#{k}" %>, metal::lambda<equals_to<<%= ints.last || 0 %>>::apply>>;
#endif

<% end %>

int main() {}
